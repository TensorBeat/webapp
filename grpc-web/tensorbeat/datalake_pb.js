// source: tensorbeat/datalake.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var tensorbeat_common_pb = require('../tensorbeat/common_pb.js');
goog.object.extend(proto, tensorbeat_common_pb);
goog.exportSymbol('proto.tensorbeat.datalake.AddSongsRequest', null, global);
goog.exportSymbol('proto.tensorbeat.datalake.AddSongsResponse', null, global);
goog.exportSymbol('proto.tensorbeat.datalake.AddTagsRequest', null, global);
goog.exportSymbol('proto.tensorbeat.datalake.AddTagsResponse', null, global);
goog.exportSymbol('proto.tensorbeat.datalake.Filter', null, global);
goog.exportSymbol('proto.tensorbeat.datalake.GetAllSongsRequest', null, global);
goog.exportSymbol('proto.tensorbeat.datalake.GetAllSongsResponse', null, global);
goog.exportSymbol('proto.tensorbeat.datalake.GetSongsByIDsRequest', null, global);
goog.exportSymbol('proto.tensorbeat.datalake.GetSongsByIDsResponse', null, global);
goog.exportSymbol('proto.tensorbeat.datalake.GetSongsByTagsRequest', null, global);
goog.exportSymbol('proto.tensorbeat.datalake.GetSongsByTagsResponse', null, global);
goog.exportSymbol('proto.tensorbeat.datalake.RemoveTagsRequest', null, global);
goog.exportSymbol('proto.tensorbeat.datalake.RemoveTagsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorbeat.datalake.GetSongsByTagsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorbeat.datalake.GetSongsByTagsRequest.displayName = 'proto.tensorbeat.datalake.GetSongsByTagsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorbeat.datalake.GetSongsByTagsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorbeat.datalake.GetSongsByTagsResponse.repeatedFields_, null);
};
goog.inherits(proto.tensorbeat.datalake.GetSongsByTagsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorbeat.datalake.GetSongsByTagsResponse.displayName = 'proto.tensorbeat.datalake.GetSongsByTagsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorbeat.datalake.AddSongsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorbeat.datalake.AddSongsRequest.repeatedFields_, null);
};
goog.inherits(proto.tensorbeat.datalake.AddSongsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorbeat.datalake.AddSongsRequest.displayName = 'proto.tensorbeat.datalake.AddSongsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorbeat.datalake.AddSongsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorbeat.datalake.AddSongsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorbeat.datalake.AddSongsResponse.displayName = 'proto.tensorbeat.datalake.AddSongsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorbeat.datalake.AddTagsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorbeat.datalake.AddTagsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorbeat.datalake.AddTagsRequest.displayName = 'proto.tensorbeat.datalake.AddTagsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorbeat.datalake.AddTagsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorbeat.datalake.AddTagsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorbeat.datalake.AddTagsResponse.displayName = 'proto.tensorbeat.datalake.AddTagsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorbeat.datalake.RemoveTagsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorbeat.datalake.RemoveTagsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorbeat.datalake.RemoveTagsRequest.displayName = 'proto.tensorbeat.datalake.RemoveTagsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorbeat.datalake.RemoveTagsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorbeat.datalake.RemoveTagsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorbeat.datalake.RemoveTagsResponse.displayName = 'proto.tensorbeat.datalake.RemoveTagsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorbeat.datalake.GetAllSongsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorbeat.datalake.GetAllSongsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorbeat.datalake.GetAllSongsRequest.displayName = 'proto.tensorbeat.datalake.GetAllSongsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorbeat.datalake.GetAllSongsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorbeat.datalake.GetAllSongsResponse.repeatedFields_, null);
};
goog.inherits(proto.tensorbeat.datalake.GetAllSongsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorbeat.datalake.GetAllSongsResponse.displayName = 'proto.tensorbeat.datalake.GetAllSongsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorbeat.datalake.GetSongsByIDsRequest.repeatedFields_, null);
};
goog.inherits(proto.tensorbeat.datalake.GetSongsByIDsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorbeat.datalake.GetSongsByIDsRequest.displayName = 'proto.tensorbeat.datalake.GetSongsByIDsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorbeat.datalake.GetSongsByIDsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorbeat.datalake.GetSongsByIDsResponse.repeatedFields_, null);
};
goog.inherits(proto.tensorbeat.datalake.GetSongsByIDsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tensorbeat.datalake.GetSongsByIDsResponse.displayName = 'proto.tensorbeat.datalake.GetSongsByIDsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorbeat.datalake.GetSongsByTagsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorbeat.datalake.GetSongsByTagsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tagsMap: (f = msg.getTagsMap()) ? f.toObject(includeInstance, undefined) : [],
    filter: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorbeat.datalake.GetSongsByTagsRequest}
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorbeat.datalake.GetSongsByTagsRequest;
  return proto.tensorbeat.datalake.GetSongsByTagsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorbeat.datalake.GetSongsByTagsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorbeat.datalake.GetSongsByTagsRequest}
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getTagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 2:
      var value = /** @type {!proto.tensorbeat.datalake.Filter} */ (reader.readEnum());
      msg.setFilter(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageToken(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorbeat.datalake.GetSongsByTagsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorbeat.datalake.GetSongsByTagsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getFilter();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * map<string, string> tags = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest.prototype.getTagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.tensorbeat.datalake.GetSongsByTagsRequest} returns this
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest.prototype.clearTagsMap = function() {
  this.getTagsMap().clear();
  return this;};


/**
 * optional Filter filter = 2;
 * @return {!proto.tensorbeat.datalake.Filter}
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest.prototype.getFilter = function() {
  return /** @type {!proto.tensorbeat.datalake.Filter} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.tensorbeat.datalake.Filter} value
 * @return {!proto.tensorbeat.datalake.GetSongsByTagsRequest} returns this
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int64 page_token = 3;
 * @return {number}
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest.prototype.getPageToken = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorbeat.datalake.GetSongsByTagsRequest} returns this
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorbeat.datalake.GetSongsByTagsRequest} returns this
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest.prototype.clearPageToken = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest.prototype.hasPageToken = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 page_size = 4;
 * @return {number}
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorbeat.datalake.GetSongsByTagsRequest} returns this
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorbeat.datalake.GetSongsByTagsRequest} returns this
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest.prototype.clearPageSize = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorbeat.datalake.GetSongsByTagsRequest.prototype.hasPageSize = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorbeat.datalake.GetSongsByTagsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorbeat.datalake.GetSongsByTagsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorbeat.datalake.GetSongsByTagsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorbeat.datalake.GetSongsByTagsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.GetSongsByTagsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    songsList: jspb.Message.toObjectList(msg.getSongsList(),
    tensorbeat_common_pb.File.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorbeat.datalake.GetSongsByTagsResponse}
 */
proto.tensorbeat.datalake.GetSongsByTagsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorbeat.datalake.GetSongsByTagsResponse;
  return proto.tensorbeat.datalake.GetSongsByTagsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorbeat.datalake.GetSongsByTagsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorbeat.datalake.GetSongsByTagsResponse}
 */
proto.tensorbeat.datalake.GetSongsByTagsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tensorbeat_common_pb.File;
      reader.readMessage(value,tensorbeat_common_pb.File.deserializeBinaryFromReader);
      msg.addSongs(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorbeat.datalake.GetSongsByTagsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorbeat.datalake.GetSongsByTagsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorbeat.datalake.GetSongsByTagsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.GetSongsByTagsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSongsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      tensorbeat_common_pb.File.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated tensorbeat.common.File songs = 1;
 * @return {!Array<!proto.tensorbeat.common.File>}
 */
proto.tensorbeat.datalake.GetSongsByTagsResponse.prototype.getSongsList = function() {
  return /** @type{!Array<!proto.tensorbeat.common.File>} */ (
    jspb.Message.getRepeatedWrapperField(this, tensorbeat_common_pb.File, 1));
};


/**
 * @param {!Array<!proto.tensorbeat.common.File>} value
 * @return {!proto.tensorbeat.datalake.GetSongsByTagsResponse} returns this
*/
proto.tensorbeat.datalake.GetSongsByTagsResponse.prototype.setSongsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tensorbeat.common.File=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorbeat.common.File}
 */
proto.tensorbeat.datalake.GetSongsByTagsResponse.prototype.addSongs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tensorbeat.common.File, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tensorbeat.datalake.GetSongsByTagsResponse} returns this
 */
proto.tensorbeat.datalake.GetSongsByTagsResponse.prototype.clearSongsList = function() {
  return this.setSongsList([]);
};


/**
 * optional int64 next_page_token = 2;
 * @return {number}
 */
proto.tensorbeat.datalake.GetSongsByTagsResponse.prototype.getNextPageToken = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorbeat.datalake.GetSongsByTagsResponse} returns this
 */
proto.tensorbeat.datalake.GetSongsByTagsResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorbeat.datalake.AddSongsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorbeat.datalake.AddSongsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorbeat.datalake.AddSongsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorbeat.datalake.AddSongsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.AddSongsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    songsList: jspb.Message.toObjectList(msg.getSongsList(),
    tensorbeat_common_pb.AddFile.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorbeat.datalake.AddSongsRequest}
 */
proto.tensorbeat.datalake.AddSongsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorbeat.datalake.AddSongsRequest;
  return proto.tensorbeat.datalake.AddSongsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorbeat.datalake.AddSongsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorbeat.datalake.AddSongsRequest}
 */
proto.tensorbeat.datalake.AddSongsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tensorbeat_common_pb.AddFile;
      reader.readMessage(value,tensorbeat_common_pb.AddFile.deserializeBinaryFromReader);
      msg.addSongs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorbeat.datalake.AddSongsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorbeat.datalake.AddSongsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorbeat.datalake.AddSongsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.AddSongsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSongsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      tensorbeat_common_pb.AddFile.serializeBinaryToWriter
    );
  }
};


/**
 * repeated tensorbeat.common.AddFile songs = 1;
 * @return {!Array<!proto.tensorbeat.common.AddFile>}
 */
proto.tensorbeat.datalake.AddSongsRequest.prototype.getSongsList = function() {
  return /** @type{!Array<!proto.tensorbeat.common.AddFile>} */ (
    jspb.Message.getRepeatedWrapperField(this, tensorbeat_common_pb.AddFile, 1));
};


/**
 * @param {!Array<!proto.tensorbeat.common.AddFile>} value
 * @return {!proto.tensorbeat.datalake.AddSongsRequest} returns this
*/
proto.tensorbeat.datalake.AddSongsRequest.prototype.setSongsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tensorbeat.common.AddFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorbeat.common.AddFile}
 */
proto.tensorbeat.datalake.AddSongsRequest.prototype.addSongs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tensorbeat.common.AddFile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tensorbeat.datalake.AddSongsRequest} returns this
 */
proto.tensorbeat.datalake.AddSongsRequest.prototype.clearSongsList = function() {
  return this.setSongsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorbeat.datalake.AddSongsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorbeat.datalake.AddSongsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorbeat.datalake.AddSongsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.AddSongsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    successful: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorbeat.datalake.AddSongsResponse}
 */
proto.tensorbeat.datalake.AddSongsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorbeat.datalake.AddSongsResponse;
  return proto.tensorbeat.datalake.AddSongsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorbeat.datalake.AddSongsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorbeat.datalake.AddSongsResponse}
 */
proto.tensorbeat.datalake.AddSongsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccessful(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorbeat.datalake.AddSongsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorbeat.datalake.AddSongsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorbeat.datalake.AddSongsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.AddSongsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccessful();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool successful = 1;
 * @return {boolean}
 */
proto.tensorbeat.datalake.AddSongsResponse.prototype.getSuccessful = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tensorbeat.datalake.AddSongsResponse} returns this
 */
proto.tensorbeat.datalake.AddSongsResponse.prototype.setSuccessful = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorbeat.datalake.AddTagsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorbeat.datalake.AddTagsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorbeat.datalake.AddTagsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.AddTagsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tagsMap: (f = msg.getTagsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorbeat.datalake.AddTagsRequest}
 */
proto.tensorbeat.datalake.AddTagsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorbeat.datalake.AddTagsRequest;
  return proto.tensorbeat.datalake.AddTagsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorbeat.datalake.AddTagsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorbeat.datalake.AddTagsRequest}
 */
proto.tensorbeat.datalake.AddTagsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = msg.getTagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorbeat.datalake.AddTagsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorbeat.datalake.AddTagsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorbeat.datalake.AddTagsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.AddTagsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.tensorbeat.datalake.AddTagsRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tensorbeat.datalake.AddTagsRequest} returns this
 */
proto.tensorbeat.datalake.AddTagsRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> tags = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.tensorbeat.datalake.AddTagsRequest.prototype.getTagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.tensorbeat.datalake.AddTagsRequest} returns this
 */
proto.tensorbeat.datalake.AddTagsRequest.prototype.clearTagsMap = function() {
  this.getTagsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorbeat.datalake.AddTagsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorbeat.datalake.AddTagsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorbeat.datalake.AddTagsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.AddTagsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    successful: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorbeat.datalake.AddTagsResponse}
 */
proto.tensorbeat.datalake.AddTagsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorbeat.datalake.AddTagsResponse;
  return proto.tensorbeat.datalake.AddTagsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorbeat.datalake.AddTagsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorbeat.datalake.AddTagsResponse}
 */
proto.tensorbeat.datalake.AddTagsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccessful(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorbeat.datalake.AddTagsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorbeat.datalake.AddTagsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorbeat.datalake.AddTagsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.AddTagsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccessful();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool successful = 1;
 * @return {boolean}
 */
proto.tensorbeat.datalake.AddTagsResponse.prototype.getSuccessful = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tensorbeat.datalake.AddTagsResponse} returns this
 */
proto.tensorbeat.datalake.AddTagsResponse.prototype.setSuccessful = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorbeat.datalake.RemoveTagsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorbeat.datalake.RemoveTagsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorbeat.datalake.RemoveTagsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.RemoveTagsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tagsMap: (f = msg.getTagsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorbeat.datalake.RemoveTagsRequest}
 */
proto.tensorbeat.datalake.RemoveTagsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorbeat.datalake.RemoveTagsRequest;
  return proto.tensorbeat.datalake.RemoveTagsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorbeat.datalake.RemoveTagsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorbeat.datalake.RemoveTagsRequest}
 */
proto.tensorbeat.datalake.RemoveTagsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = msg.getTagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorbeat.datalake.RemoveTagsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorbeat.datalake.RemoveTagsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorbeat.datalake.RemoveTagsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.RemoveTagsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.tensorbeat.datalake.RemoveTagsRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tensorbeat.datalake.RemoveTagsRequest} returns this
 */
proto.tensorbeat.datalake.RemoveTagsRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> tags = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.tensorbeat.datalake.RemoveTagsRequest.prototype.getTagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.tensorbeat.datalake.RemoveTagsRequest} returns this
 */
proto.tensorbeat.datalake.RemoveTagsRequest.prototype.clearTagsMap = function() {
  this.getTagsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorbeat.datalake.RemoveTagsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorbeat.datalake.RemoveTagsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorbeat.datalake.RemoveTagsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.RemoveTagsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    successful: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorbeat.datalake.RemoveTagsResponse}
 */
proto.tensorbeat.datalake.RemoveTagsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorbeat.datalake.RemoveTagsResponse;
  return proto.tensorbeat.datalake.RemoveTagsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorbeat.datalake.RemoveTagsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorbeat.datalake.RemoveTagsResponse}
 */
proto.tensorbeat.datalake.RemoveTagsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccessful(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorbeat.datalake.RemoveTagsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorbeat.datalake.RemoveTagsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorbeat.datalake.RemoveTagsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.RemoveTagsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccessful();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool successful = 1;
 * @return {boolean}
 */
proto.tensorbeat.datalake.RemoveTagsResponse.prototype.getSuccessful = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tensorbeat.datalake.RemoveTagsResponse} returns this
 */
proto.tensorbeat.datalake.RemoveTagsResponse.prototype.setSuccessful = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorbeat.datalake.GetAllSongsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorbeat.datalake.GetAllSongsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorbeat.datalake.GetAllSongsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.GetAllSongsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageToken: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorbeat.datalake.GetAllSongsRequest}
 */
proto.tensorbeat.datalake.GetAllSongsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorbeat.datalake.GetAllSongsRequest;
  return proto.tensorbeat.datalake.GetAllSongsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorbeat.datalake.GetAllSongsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorbeat.datalake.GetAllSongsRequest}
 */
proto.tensorbeat.datalake.GetAllSongsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageToken(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorbeat.datalake.GetAllSongsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorbeat.datalake.GetAllSongsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorbeat.datalake.GetAllSongsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.GetAllSongsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 page_token = 1;
 * @return {number}
 */
proto.tensorbeat.datalake.GetAllSongsRequest.prototype.getPageToken = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorbeat.datalake.GetAllSongsRequest} returns this
 */
proto.tensorbeat.datalake.GetAllSongsRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorbeat.datalake.GetAllSongsRequest} returns this
 */
proto.tensorbeat.datalake.GetAllSongsRequest.prototype.clearPageToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorbeat.datalake.GetAllSongsRequest.prototype.hasPageToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 page_size = 2;
 * @return {number}
 */
proto.tensorbeat.datalake.GetAllSongsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorbeat.datalake.GetAllSongsRequest} returns this
 */
proto.tensorbeat.datalake.GetAllSongsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorbeat.datalake.GetAllSongsRequest} returns this
 */
proto.tensorbeat.datalake.GetAllSongsRequest.prototype.clearPageSize = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorbeat.datalake.GetAllSongsRequest.prototype.hasPageSize = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorbeat.datalake.GetAllSongsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorbeat.datalake.GetAllSongsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorbeat.datalake.GetAllSongsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorbeat.datalake.GetAllSongsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.GetAllSongsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    songsList: jspb.Message.toObjectList(msg.getSongsList(),
    tensorbeat_common_pb.File.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorbeat.datalake.GetAllSongsResponse}
 */
proto.tensorbeat.datalake.GetAllSongsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorbeat.datalake.GetAllSongsResponse;
  return proto.tensorbeat.datalake.GetAllSongsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorbeat.datalake.GetAllSongsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorbeat.datalake.GetAllSongsResponse}
 */
proto.tensorbeat.datalake.GetAllSongsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tensorbeat_common_pb.File;
      reader.readMessage(value,tensorbeat_common_pb.File.deserializeBinaryFromReader);
      msg.addSongs(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorbeat.datalake.GetAllSongsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorbeat.datalake.GetAllSongsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorbeat.datalake.GetAllSongsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.GetAllSongsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSongsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      tensorbeat_common_pb.File.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated tensorbeat.common.File songs = 1;
 * @return {!Array<!proto.tensorbeat.common.File>}
 */
proto.tensorbeat.datalake.GetAllSongsResponse.prototype.getSongsList = function() {
  return /** @type{!Array<!proto.tensorbeat.common.File>} */ (
    jspb.Message.getRepeatedWrapperField(this, tensorbeat_common_pb.File, 1));
};


/**
 * @param {!Array<!proto.tensorbeat.common.File>} value
 * @return {!proto.tensorbeat.datalake.GetAllSongsResponse} returns this
*/
proto.tensorbeat.datalake.GetAllSongsResponse.prototype.setSongsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tensorbeat.common.File=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorbeat.common.File}
 */
proto.tensorbeat.datalake.GetAllSongsResponse.prototype.addSongs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tensorbeat.common.File, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tensorbeat.datalake.GetAllSongsResponse} returns this
 */
proto.tensorbeat.datalake.GetAllSongsResponse.prototype.clearSongsList = function() {
  return this.setSongsList([]);
};


/**
 * optional int64 next_page_token = 2;
 * @return {number}
 */
proto.tensorbeat.datalake.GetAllSongsResponse.prototype.getNextPageToken = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorbeat.datalake.GetAllSongsResponse} returns this
 */
proto.tensorbeat.datalake.GetAllSongsResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorbeat.datalake.GetSongsByIDsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorbeat.datalake.GetSongsByIDsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    pageToken: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorbeat.datalake.GetSongsByIDsRequest}
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorbeat.datalake.GetSongsByIDsRequest;
  return proto.tensorbeat.datalake.GetSongsByIDsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorbeat.datalake.GetSongsByIDsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorbeat.datalake.GetSongsByIDsRequest}
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addIds(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageToken(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorbeat.datalake.GetSongsByIDsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorbeat.datalake.GetSongsByIDsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * repeated string ids = 1;
 * @return {!Array<string>}
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.prototype.getIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tensorbeat.datalake.GetSongsByIDsRequest} returns this
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.prototype.setIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tensorbeat.datalake.GetSongsByIDsRequest} returns this
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.prototype.addIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tensorbeat.datalake.GetSongsByIDsRequest} returns this
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};


/**
 * optional int64 page_token = 2;
 * @return {number}
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.prototype.getPageToken = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorbeat.datalake.GetSongsByIDsRequest} returns this
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorbeat.datalake.GetSongsByIDsRequest} returns this
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.prototype.clearPageToken = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.prototype.hasPageToken = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 page_size = 3;
 * @return {number}
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorbeat.datalake.GetSongsByIDsRequest} returns this
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tensorbeat.datalake.GetSongsByIDsRequest} returns this
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.prototype.clearPageSize = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tensorbeat.datalake.GetSongsByIDsRequest.prototype.hasPageSize = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorbeat.datalake.GetSongsByIDsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorbeat.datalake.GetSongsByIDsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorbeat.datalake.GetSongsByIDsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorbeat.datalake.GetSongsByIDsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.GetSongsByIDsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    songsList: jspb.Message.toObjectList(msg.getSongsList(),
    tensorbeat_common_pb.File.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorbeat.datalake.GetSongsByIDsResponse}
 */
proto.tensorbeat.datalake.GetSongsByIDsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorbeat.datalake.GetSongsByIDsResponse;
  return proto.tensorbeat.datalake.GetSongsByIDsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorbeat.datalake.GetSongsByIDsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorbeat.datalake.GetSongsByIDsResponse}
 */
proto.tensorbeat.datalake.GetSongsByIDsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tensorbeat_common_pb.File;
      reader.readMessage(value,tensorbeat_common_pb.File.deserializeBinaryFromReader);
      msg.addSongs(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorbeat.datalake.GetSongsByIDsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorbeat.datalake.GetSongsByIDsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorbeat.datalake.GetSongsByIDsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorbeat.datalake.GetSongsByIDsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSongsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      tensorbeat_common_pb.File.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated tensorbeat.common.File songs = 1;
 * @return {!Array<!proto.tensorbeat.common.File>}
 */
proto.tensorbeat.datalake.GetSongsByIDsResponse.prototype.getSongsList = function() {
  return /** @type{!Array<!proto.tensorbeat.common.File>} */ (
    jspb.Message.getRepeatedWrapperField(this, tensorbeat_common_pb.File, 1));
};


/**
 * @param {!Array<!proto.tensorbeat.common.File>} value
 * @return {!proto.tensorbeat.datalake.GetSongsByIDsResponse} returns this
*/
proto.tensorbeat.datalake.GetSongsByIDsResponse.prototype.setSongsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tensorbeat.common.File=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorbeat.common.File}
 */
proto.tensorbeat.datalake.GetSongsByIDsResponse.prototype.addSongs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tensorbeat.common.File, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tensorbeat.datalake.GetSongsByIDsResponse} returns this
 */
proto.tensorbeat.datalake.GetSongsByIDsResponse.prototype.clearSongsList = function() {
  return this.setSongsList([]);
};


/**
 * optional int64 next_page_token = 2;
 * @return {number}
 */
proto.tensorbeat.datalake.GetSongsByIDsResponse.prototype.getNextPageToken = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tensorbeat.datalake.GetSongsByIDsResponse} returns this
 */
proto.tensorbeat.datalake.GetSongsByIDsResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.tensorbeat.datalake.Filter = {
  ANY: 0,
  ALL: 1,
  NONE: 2
};

goog.object.extend(exports, proto.tensorbeat.datalake);
